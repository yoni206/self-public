(set-option :sygus-verify-inst-max-rounds -1)
(set-option :sygus-grammar-cons any-const)
(set-option :sygus-abort-size 101)
(set-option :incremental false)

(set-logic ALL)
(synth-fun lower () Int
( (START Int) )
  (
   (START Int (
   (+ START START) 
   (- START START) 
;   0 
   1
  ))
))

(synth-fun upper () Int
( (START Int) )
  (
   (START Int (
    (+ START START) 
	(- START START) 
;	0 
	1
  ))
))

(declare-var x Int)
(declare-var y Int)
(define-fun P ( ) Bool true)
(define-fun S ((x Int) (y Int) ) Bool (and (<= (- 100) x) (<= x y) (<= y 100)))
(define-fun b ((x Int) (y Int) ) Bool (and (<= lower x) (<= x upper)))
; (=> true (=> (and (<= (- 100) x) (<= x y) (<= y 100)) (and (<= lower x) (<= x upper))))
(constraint (=> P  (=> (S x y) (b x y))))
;(=> true (=> (and (<= lower x) (<= x upper)) (exists ((y Int)) (and (<= (- 100) x) (<= x y) (<= y 100)))))
(constraint (=> P  (=>  (b x y) (exists ((yy Int)) (S x yy)))))
(check-synth)
